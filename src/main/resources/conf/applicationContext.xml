<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config/>

	<context:component-scan base-package="com.yqx">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 通过setter注入方式将 连接数据库的配置参数注入至JDBCDataSource中 -->
    <bean id="dataSource_jdbc" class="com.yqx.util.JDBCDataSource">
        <property name="driver" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/test?useUnicode=true"></property>
        <property name="user" value="yqxwin"></property>
        <property name="pwd" value="Yqx810700"></property>
    </bean>
	
    <!-- 下面是hibernate 相关配置 -->
    <!-- 引入外部的属性文件 -->
	<context:property-placeholder location="classpath:/conf/mysqlDB.properties"/>
	
	<!-- 配置c3p0 连接池 -->
	<bean id="dataSource_c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">        
        <property name="driverClass" value="${driver}"/>        
        <property name="jdbcUrl" value="${url}"/>        
        <property name="user" value="${user}"/>        
        <property name="password" value="${pwd}"/>        
    </bean>
    
	<bean id="dataSourceDBCP" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${driver}</value>
		</property>
		<property name="url">
			<value>${url}</value>
		</property>
		<property name="username">
			<value>${user}</value>
		</property>
		<property name="password">
			<value>${pwd}</value>
		</property>
	</bean>
	
	<bean id="dsMysql" class="com.yqx.baseUtil.YqxDefaultDataSource">
		<property name="dataSource">
			<ref bean="${defaultDs}" />
		</property>
	</bean>
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- JPA实体管理器工厂 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dsMysql" />
		<property name="persistenceUnitName" value="BOB_JPA_MYSQL" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <!-- 加入定制化包路径 -->
        <property name="packagesToScan" value="com.yqx.model"/>

        <property name="jpaProperties">
            <props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.format_sql">true </prop>  
                
			       <!--          它包含4个属性: 
			    * create : 会根据你的model类来生成表,但是每次运行都会删除上一次的表,重新生成表,哪怕2次没有任何改变 
			    * create-drop : 根据model类生成表,但是sessionFactory一关闭,表就自动删除 
			    * update : 最常用的属性，也根据model类生成表,即使表结构改变了,表中的行仍然存在,不会删除以前的行 
			    * validate : 只会和数据库中的表进行比较,不会创建新表,但是会插入新值  -->
                
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
        </property>
		<!-- <property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="database" value="${dbType}" />
				<property name="showSql" value="true" />
			</bean>
		</property> -->
		<property name="jpaPropertyMap">
			<map>
				<entry key="eclipselink.weaving" value="false" />
			</map>
		</property>
	</bean>
	
	<!-- 设置JPA实现厂商的特定属性 -->
    <bean id="hibernateJpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
    </bean>

    <!-- Jpa 事务配置 -->
    <bean id="yqxjpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
	
	<!-- Jpa 事务配置 -->
	<!-- <bean id="yqxjpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />
		</property>
	</bean> -->
	
	<tx:annotation-driven transaction-manager="yqxjpaTransactionManager"
		proxy-target-class="true" />
	
</beans>